# http://devel.aquahill.net/zsh/dot.zshrc
echo "Loading .zshrc"

### environment variables
#export EDITOR=vim
#export PAGER=less

# PYTHONPATH
#export PYTHONPATH=/Library/Python/2.6/site-packages:/usr/local/bin

# maven
export M2_HOME=$HOME/apps/maven
export M2=$M2_HOME/bin
export MAVEN_OPTS="-Xmx1024m -Duser.language=en"

# ant
export ANT_HOME=$HOME/apps/ant
export ANT=$ANT_HOME/bin

# jruby
export JRUBY_HOME=$HOME/apps/jruby
export JRUBY=$JRUBY_HOME/bin

# pax-construct
#export PAX_CONSTRUCT_HOME=$HOME/apps/pax-construct
#export PAX_CONSTRUCT=$PAX_CONSTRUCT_HOME/bin

# OS dependent variables (Java, Macports, ...)
os_type=`uname`

if [ "$os_type" = "Linux" ]; then
    export JAVA_HOME=$HOME/apps/jdk
    export JAVA=$JAVA_HOME/bin
    export APPENGINE=$HOME/apps/google_appengine
    export PATH=$MENDELEY:$APPENGINE:$JRUBY:$ECLIPSE:$ANT:$M2:$JAVA:$PATH
    export ECLIPSE=$HOME/apps/eclipse
    export MENDELEY_HOME=$HOME/apps/mendeley
    export MENDELEY=$MENDELEY_HOME/bin
elif [ "$os_type" = "Darwin" ]; then
    ## Java
    #export JAVA_HOME=/Library/Java/Home
    #export JAVA=$JAVA_HOME/bin
    ## enthought Python distribution
    #export EPD="/Library/Frameworks/Python.framework/Versions/Current/bin"
    ## Gentoo Prefix
    #export EPREFIX="$HOME/Gentoo"
    #export PATH=$EPREFIX/usr/bin:$EPREFIX/bin:$EPREFIX/tmp/usr/bin:$EPREFIX/tmp/bin:$ANT:$M2:$PATH
    # if [ -f startprefix ]; then
    #   sh startprefix
    # fi
    ## MacPorts
    export MACPORTS_PREFIX=/opt/local
    export MACPORTS_BIN=$MACPORTS_PREFIX/bin
    export MACPORTS_SBIN=$MACPORTS_PREFIX/sbin
    export MACPORTS_MAN=$MACPORTS_PREFIX/share/man
    export PATH=$MACPORTS_BIN:$MACPORTS_SBIN:$MACPORTS_MAN:$ANT:$M2:$PATH
fi

### shell variables
HISTFILE=$HOME/.histfile
HISTSIZE=1024
SAVEHIST=1024

# http://journal.mycom.co.jp/column/zsh/002/index.html
PROMPT="[%n@%m]%~%# "

# Emacs keymap
bindkey -e

# historical backward/forward search with linehead string binded to ^P/^N
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "^[/" expand-cmd-path

zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# http://hatena.g.hatena.ne.jp/hatenatech/20060517/1147833430
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin

source $HOME/projects/conf/zsh/zshaliases
source $HOME/projects/conf/zsh/zshoptions

#
# Default shell configuration
#
autoload -U colors
colors
autoload -U compinit
compinit
autoload predict-on
predict-on

#
# tmux
#
if [ "$os_type" = "Linux" ]; then
    # http://d.hatena.ne.jp/ns9tks/20091016/1255691027
    if [ $SHLVL = 1 ]; then
      tmux attach-session || tmux -f $HOME/projects/conf/tmux/.tmux.conf
    fi
fi

function chpwd() { l }


function ranger-cd {
    tempfile='/tmp/chosendir'
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

function ppgrep() {
    if [[ $1 == "" ]]; then
        PERCOL=percol
    else
        PERCOL="percol --query $1"
    fi
    ps aux | eval $PERCOL | awk '{ print $2 }'
}

function ppkill() {
    if [[ $1 =~ "^-" ]]; then
        QUERY=""            # options only
    else
        QUERY=$1            # with a query
        [[ $# > 0 ]] && shift
    fi
    ppgrep $QUERY | xargs kill $*
}

function exists { which $1 &> /dev/null }

if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
        BUFFER=$(history -n 1 | eval $tac | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history
fi

alias conda=/Users/kozo2/anaconda/bin/conda
alias ipython=/Users/kozo2/anaconda/bin/ipython
alias pip=/Users/kozo2/anaconda/bin/pip
alias l='ls -lh'
